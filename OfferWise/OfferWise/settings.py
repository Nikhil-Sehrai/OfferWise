"""
Django settings for OfferWise project (dev/local).

Generated by 'django-admin startproject' using Django 5.2.7.
"""

from pathlib import Path
import os

BASE_DIR = Path(__file__).resolve().parent.parent

# --------------------------------------------------------------------
# Core
# --------------------------------------------------------------------
SECRET_KEY = 'django-insecure-#gd3l!=y#shmd1u%oc&i6-@qch6#@mruwy!*h)r9xrk^fv=-=m'
DEBUG = True

# Allow local development
# ALLOWED_HOSTS = ['localhost', '127.0.0.1', '[::1]']

# If Render sets RENDER_EXTERNAL_HOSTNAME, add it explicitly
hostname = os.environ.get("RENDER_EXTERNAL_HOSTNAME")
if hostname and hostname not in ALLOWED_HOSTS:
    ALLOWED_HOSTS.append(hostname)
    CSRF_TRUSTED_ORIGINS.append(f"https://{hostname}")

#UAT Host
ALLOWED_HOSTS = ["localhost", "127.0.0.1", ".onrender.com", "offerwise.onrender.com"]

# CSRF for HTTPS on Render
CSRF_TRUSTED_ORIGINS = [
    "https://*.onrender.com",
    "https://offerwise.onrender.com",
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]


# --------------------------------------------------------------------
# Applications
# --------------------------------------------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',   # handy for currency/number formatting
    # your app
    'home',                 # <-- make sure your app is named this
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",   # <â€” add this
    'django.contrib.sessions.middleware.SessionMiddleware',  # sessions enabled
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if not DEBUG:
    STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
    SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

ROOT_URLCONF = 'OfferWise.urls'

# --------------------------------------------------------------------
# Templates
# --------------------------------------------------------------------
# Use the top-level /templates folder we provided
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ BASE_DIR / 'templates' ],   # <-- important
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'OfferWise.wsgi.application'

# --------------------------------------------------------------------
# Database (dev)
# --------------------------------------------------------------------
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# --------------------------------------------------------------------
# Password validation
# --------------------------------------------------------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]

# --------------------------------------------------------------------
# I18N / TZ
# --------------------------------------------------------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'Asia/Kolkata'   # local to you
USE_I18N = True
USE_TZ = True

# --------------------------------------------------------------------
# Static & Media (dev)
# --------------------------------------------------------------------
# Static files served from /static/ in dev
"""
STATIC_URL = 'static/'
STATICFILES_DIRS = [ BASE_DIR / 'static' ]   # <-- our pack's /static
# Where collectstatic will gather all static files
STATIC_ROOT = BASE_DIR / "staticfiles"
"""
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"] if (BASE_DIR / "static").exists() else []

# (Optional) If you ever add uploads later:
MEDIA_URL = 'media/'
MEDIA_ROOT = BASE_DIR / 'media'

# --------------------------------------------------------------------
# Django 5 defaults
# --------------------------------------------------------------------
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'




